# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-06-21 11:21
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import mptt.fields
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agents', '0001_initial'),
        ('utils', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('form_no', models.CharField(help_text='e.x: 1021031', max_length=7, unique=True, verbose_name='formulir no.')),
                ('deposit_type', models.CharField(choices=[(b'netto', 'Netto'), (b'gross', 'Gross')], default=b'netto', max_length=10, verbose_name='deposit')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Please input: 150000000', max_digits=16, verbose_name='amount')),
                ('transaction_type', models.CharField(choices=[(b'overbooking', 'Overbooking'), (b'trans_or_rtgs', 'Transaction or RTGS'), (b'cheque_or_giro', 'Cheque or Giro No.')], default=b'trans_or_rtgs', max_length=30, verbose_name='transaction type')),
                ('bank_acc_name', models.CharField(max_length=50, verbose_name='bank account name')),
                ('bank_name', models.CharField(max_length=50, verbose_name='bank name')),
                ('bank_acc_no', models.CharField(max_length=30, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\-\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='bank account no.')),
                ('transaction_date', models.DateField(verbose_name='transaction date')),
                ('invest_tenor', models.PositiveSmallIntegerField(choices=[(3, '3 Months'), (6, '6 Months'), (12, '12 Months')], default=3, verbose_name='tenor')),
                ('invest_return', models.DecimalField(decimal_places=2, help_text='Please input: 2.50', max_digits=5, verbose_name='return')),
                ('product_type', models.CharField(choices=[(b'hypn', 'HYPN'), (b'isprint', 'ISPRINT')], default=b'hypn', max_length=20)),
                ('is_ro', models.BooleanField(default=False, verbose_name='is rollover')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('investor_type', models.CharField(choices=[(b'individual', 'Individual'), (b'corporate', 'Corporate')], default=b'individual', max_length=20, verbose_name='investor type')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('pic_corporate', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pic name')),
                ('pic_position', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pic position')),
                ('national_id_card_no', models.CharField(max_length=30, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number'), django.core.validators.MaxLengthValidator(16), django.core.validators.MinLengthValidator(16)], verbose_name='national id card no')),
                ('date_of_birth', models.DateField(blank=True, default=None, null=True, verbose_name='date of birth')),
                ('address', models.TextField(verbose_name='address')),
                ('postal_code', models.CharField(default=b'', max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='postal code')),
                ('phone', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\-\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='phone')),
                ('mobile1', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='primary mobile no.')),
                ('mobile2', models.CharField(blank=True, default=b'', max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='secondary mobile no.')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('bank_acc_name', models.CharField(max_length=50, verbose_name='bank account name')),
                ('bank_name', models.CharField(max_length=50, verbose_name='bank name')),
                ('bank_branch', models.CharField(max_length=50, verbose_name='bank branch')),
                ('bank_acc_no', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\-\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='bank account no.')),
                ('tax_id_no', models.CharField(blank=True, default=b'', max_length=30, null=True, verbose_name='tax id no.')),
                ('city', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.City')),
                ('financial_consultant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='agents.Agent')),
                ('province', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.Province')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('form_no', models.CharField(max_length=7, verbose_name='form no')),
                ('withdrawal_date', models.DateField(verbose_name='withdrawal date')),
                ('amount', models.DecimalField(decimal_places=2, help_text=b'Currency in Rp (Rupiah)', max_digits=16, verbose_name='amount')),
                ('notes', models.TextField(blank=True, max_length=100, verbose_name='notes')),
                ('bank_acc_name', models.CharField(max_length=50, verbose_name='bank account name')),
                ('bank_name', models.CharField(max_length=50, verbose_name='bank name')),
                ('bank_acc_no', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\-\\d+)*\\Z'), code=b'invalid', message=b'Enter only digits number')], verbose_name='bank account no.')),
                ('deposit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='investors.Deposit')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.AddField(
            model_name='deposit',
            name='investor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='investors.Investor'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='investors.Deposit'),
        ),
    ]
